@import '../../../../styles/variables.scss';

$navigationCircleSize: 32px;
$navigationPadding: 3px;
$locationIconOffset: -75px;

.highlights-chain {
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;

    &_start {
        position: relative;
        width: $startWidth;
        margin-left: auto;
        margin-right: auto;
        margin-bottom: 4 * $margin;

        &-circle {
            fill: $light;
        }

        &-content {
            display: flex;
            flex-direction: column;
            justify-content: center;

            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            margin-left: auto;
            margin-right: auto;

            height: 100%;

            &--title,
            &--subtitle {
                margin-bottom: 0;
                text-align: center;
            }

            &--title {
                font-size: 1rem;
                font-weight: bold;
                color: $secondary-600;
            }

            &--subtitle {
                font-size: 0.8rem;
                font-style: italic;
            }
        }

        &-location {
            position: absolute;
            width: $navigationCircleSize;
            height: $navigationCircleSize;
            left: $locationIconOffset;
            top: calc(50% - 0.5 * $navigationCircleSize);
            transition: transform $transitionTimeFast ease-in-out;

            &-background {
                fill: $light;
            }

            &-icon {
                position: absolute;
                width: $navigationCircleSize - 2 * $navigationPadding;
                height: $navigationCircleSize - 2 * $navigationPadding;
                top: $navigationPadding;
                left: $navigationPadding;
                fill: $secondary-500;
            }

            &:hover {
                transform: scale(1.1);
                cursor: pointer;

                .highlights-chain_start-location-background {
                    fill: darken($light, 3%);
                }
            }
        }
    }

    &_container {
        position: relative;
        width: 100%;
        margin-bottom: 1rem;

        .place-highlight {
            position: relative;
            z-index: 2;
            width: fit-content;
            display: block;

            &.expanded {
                margin-left: $margin !important;
            }

            &.resizing {
                transition: margin-left $transitionTime ease-in-out;
            }

            &.left {
                margin-left: calc(var(--left-centerpoint-percentage) - 0.5 * $cardWidth);
            }

            &.right {
                margin-left: calc(var(--right-centerpoint-percentage) - 0.5 * $cardWidth);
            }

            &.in-section {
                padding-top: $padding;

                &.expanded {
                    margin-left: 2 * $margin !important;
                }
                &:last-child {
                    padding-bottom: $padding !important;
                }
            }
        }

        .section-highlight {
            height: 100%;
            min-height: 125px;
            width: 100%;

            &_background {
                position: absolute;
                width: calc((var(--right-centerpoint) - var(--left-centerpoint)) * var(--highlights-width) + $cardWidth + 2 * $padding);
                height: 100%;
                margin-left: auto;
                margin-right: auto;
                left: 0;
                right: 0;

                border: 1px solid $primary-500;
                border-radius: $borderRadius;
                background-color: $primary-200;

                &.expanded {
                    width: calc(var(--highlights-width) - 2 * $padding);
                }
                &.resizing {
                    transition: width $transitionTime ease-in-out;
                }
            }

            &_info {
                position: absolute;
                top: 50%;
                transform: translateY(-50%);
                left: 0;
                right: 0;
                width: calc((var(--right-centerpoint) - var(--left-centerpoint)) * var(--highlights-width));
                display: flex;
                flex-direction: column;
                align-items: center;

                &.hidden {
                    display: none;
                }
                &.card-width {
                    width: $cardWidth;
                }
                &.left {
                    margin-left: calc(var(--left-centerpoint) * var(--highlights-width) - 0.5 * $cardWidth);
                }
                &.left.card-width {
                    margin-left: calc(var(--left-centerpoint-percentage) - 0.5 * $cardWidth);
                }
                &.right {
                    margin-left: calc(var(--highlights-width) - var(--right-centerpoint) * var(--highlights-width) + 0.5 * $cardWidth);
                }
                &.right.card-width {
                    margin-left: calc(var(--right-centerpoint-percentage) - 0.5 * $cardWidth);
                }

                &-icon {
                    max-height: 64px;
                    max-width: 64px;
                    fill: $secondary-400;
                    padding: 5px;
                }

                &-title {
                    color: darken($dark, 10%);
                    font-weight: 600;
                    font-size: 0.8rem;
                    text-align: center;
                    margin-bottom: 0;
                    max-width: $cardWidth - 2 * $padding;
                }
            }
        }

        .connector {
            position: absolute;
            z-index: 1;

            &.left,
            &.right {
                width: calc(var(--right-centerpoint-percentage) - var(--left-centerpoint-percentage));
                height: calc(50% + 1rem);
                top: 50%;
                border-top: $connectorBorderStyle;
            }
            &.left {
                left: var(--left-centerpoint-percentage);
                border-right: $connectorBorderStyle;
                border-top-right-radius: $connectorBorderRadius;
            }
            &.right {
                right: calc(100% - var(--right-centerpoint-percentage));
                border-left: $connectorBorderStyle;
                border-top-left-radius: $connectorBorderRadius;
            }
            &.left-incoming,
            &.right-incoming {
                width: 1px;
                height: calc(100% + 1rem);
                top: 0;
                border-left: $connectorBorderStyle;
            }
            &.left-incoming {
                left: var(--left-centerpoint-percentage);
            }
            &.right-incoming {
                right: calc(100% - var(--right-centerpoint-percentage));
            }
        }

        &:last-child {
            .connector {
                display: none;
            }
        }
    }
}
